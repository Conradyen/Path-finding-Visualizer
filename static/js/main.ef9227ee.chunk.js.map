{"version":3,"sources":["constant/actionTypes.ts","actions/index.ts","components/GraphNode.tsx","components/Graph.tsx","components/label.tsx","components/Controller.tsx","components/githubLink.tsx","components/footer.tsx","App.js","serviceWorker.js","utils/utils.ts","algorithms/utils.ts","Datastructer/stack.js","algorithms/dfs.ts","algorithms/dijkstra.ts","Datastructer/heap.js","algorithms/aStar.ts","Datastructer/queue.js","algorithms/greedyBFS.ts","reducer/graphReducer.ts","reducer/index.ts","algorithms/index.ts","store.ts","middleware/sequenceAction.ts","constant/Theme.ts","constant/ThemeContext.tsx","index.js"],"names":["ISDARK","UPDATE_NODES","UPDATE_WALL_NODES","UPDATE_START_NODES","UPDATE_END_NODES","SET_MOUSE_DOWN","SET_CLICK_POS","SET_START_MOVE","SET_END_MOVE","SET_SPEED","SET_PATH_ALGO","START_PATH_FINDING","RESET_ALL","CLEAR_WALL","NEXTACTION","ISFINDING","sleep","ms","a","Promise","r","setTimeout","performPathFind","payload","dispatch","getState","type","actions","isReady","speed","parseInt","newAction","next","undefined","value","toVisited","row","col","keyFrameVisited","keyframes","Square","styled","div","props","isStart","isEnd","isWall","connect","state","mouseDown","onMouseMove","pos","startMove","endMove","startROW","startCOL","endROW","endCOL","currClickPos","onMouseDown","onMouseUp","key","isVisited","isPath","extraClassName","className","Wrapper","nodes","nextAction","updateNodes","useEffect","updateNode","map","rowIdx","node","id","isFinish","Label","Paper","elevation","Grid","container","spacing","alignItems","justify","item","useStyles","makeStyles","formControl","minWidth","margin","radioGroup","padding","fontFamily","radioformControl","justifyContent","useAlgo","isFinding","setPathAlgo","Algo","clearWall","resetAll","startPathFind","push","tempNode","previousNode","temp","nextNode","toShortestPath","setSpeed","classes","RadioGroup","aria-label","name","onChange","e","Typography","FormControlLabel","control","Radio","color","label","disabled","FormControl","InputLabel","Select","labelId","MenuItem","Button","variant","onClick","GitHubLink","href","icon","faGithub","size","Name","p","footer","Footer","Title","App","Boolean","window","location","hostname","match","ResetAllWithWall","grid","i","j","distance","Infinity","cost","getNewNode","startRow","startCol","endRow","endCol","getNeighbors","neighbors","length","stack","this","items","prototype","isEmpty","element","pop","peek","dfs","startNode","finishNode","s","validNeighbor","neighborPOS","dijkstra","getMinDistance","min","min_pos","updateGrid","prevNode","clostestNode","minHeap","scoreFunction","content","percolateUp","result","end","percolateDown","n","score","parentN","Math","floor","parent","elemScore","child2N","child1N","swap","child1","child1Score","child2","aStar","minheap","closestNode","validNeighbors","neighbor","newCost","abs","queue","enqueue","dequeue","shift","clear","greedyBFS","q","initState","currentRow","initGrid","isDark","graphReducer","action","pathFindTarget","start","pathFindGenerator","getPathfindGenerator","oldNodes","allNodes","updateRow","updateCol","newNode","updateStartRow","updateStartCol","graph","updateEndRow","updateEndCol","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","Array","isArray","reduce","currAction","then","all","resolve","lightTheme","darkTheme","ThemeContext","React","createContext","toggle","setIsDark","children","useLayoutEffect","theme","themeToApply","document","getElementsByTagName","style","cssText","join","Provider","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ef9227ee.chunk.js","sourcesContent":["export const ISDARK = \"ISDARK\";\n\n//=============== graph action ===============\nexport const UPDATE_NODES = \"UPDATE_NODES\";\nexport const UPDATE_WALL_NODES = \"UPDATE_WALL_NODES\";\nexport const UPDATE_START_NODES = \"UPDATE_START_NODES\";\nexport const UPDATE_END_NODES = \"UPDATE_END_NODES\";\n\n//=============== mouse action ===============\nexport const SET_MOUSE_DOWN = \"SET_MOUSE_DOWN\";\nexport const SET_MOUSE_MOVE = \"SET_MOUSE_MOVE\";\nexport const ON_MOUSE_DOWN = \"ON_MOUSE_DOWN\";\nexport const ON_MOUSE_UP = \"ON_MOUSE_UP\";\nexport const SET_CLICK_POS = \"SET_CLICK_POS\";\nexport const SET_START_MOVE = \"SET_START_MOVE\";\nexport const SET_END_MOVE = \"SET_END_MOVE\";\nexport const SET_PATH_FINDING = \"SET_PATH_FINDING\";\nexport const SET_SPEED = \"SET_SPEED\";\n//=============== control action =============\nexport const SET_PATH_ALGO = \"SET_PATH_ALGO\";\nexport const START_PATH_FINDING = \"START_PATH_FINDING\";\nexport const RESET_ALL = \"RESET_ALL\";\nexport const CLEAR_WALL = \"CLEAR_WALL\";\n\nexport const NEXTACTION = \"NEXTACTION\";\nexport const ISFINDING = \"ISFINDING\";\n","import {\n  START_PATH_FINDING,\n  UPDATE_NODES,\n  UPDATE_WALL_NODES,\n  UPDATE_START_NODES,\n  UPDATE_END_NODES,\n  CLEAR_WALL,\n  RESET_ALL,\n  SET_START_MOVE,\n  SET_MOUSE_DOWN,\n  SET_END_MOVE,\n  SET_PATH_ALGO,\n  SET_SPEED,\n  // SET_MOUSE_MOVE,\n  // ON_MOUSE_DOWN,\n  SET_CLICK_POS,\n  // ON_MOUSE_UP,\n  ISFINDING,\n  ISDARK,\n  NEXTACTION,\n} from \"../constant/actionTypes\";\nimport { IPOS } from \"../constant/ITypes\";\n\nexport const setDark = (payload: object) => ({\n  type: ISDARK,\n  payload,\n});\n\nexport const startPathFinding = (payload: object) => ({\n  type: START_PATH_FINDING,\n  payload,\n});\n\nexport const updateNodes = (payload: object) => ({\n  type: UPDATE_NODES,\n  payload,\n});\n\nexport const updateWall = (payload: object) => ({\n  type: UPDATE_WALL_NODES,\n  payload,\n});\n\nexport const updateStart = (payload: object) => ({\n  type: UPDATE_START_NODES,\n  payload,\n});\n\nexport const updateEnd = (payload: object) => ({\n  type: UPDATE_END_NODES,\n  payload,\n});\n\nexport const clearWall = (payload: object) => ({\n  type: CLEAR_WALL,\n  payload,\n});\n\nexport const resetAll = (payload: object) => ({\n  type: RESET_ALL,\n  payload,\n});\n\nexport const setSpeed = (payload: string) => ({\n  type: SET_SPEED,\n  payload,\n});\n\nexport const setStartMove = (payload: object) => ({\n  type: SET_START_MOVE,\n  payload,\n});\n\nexport const setMouseDown = (payload: object) => ({\n  type: SET_MOUSE_DOWN,\n  payload,\n});\n\nexport const setEndMove = (payload: object) => ({\n  type: SET_END_MOVE,\n  payload,\n});\n\nexport const setPathAlgo = (payload: object) => ({\n  type: SET_PATH_ALGO,\n  payload,\n});\n\nexport const onMouseMove = (payload: IPOS) => async (\n  dispatch: any,\n  getState: any\n) => {\n  const { row, col } = payload;\n  const { startMove, endMove } = getState();\n  // console.log(startMove);\n  if (startMove) {\n    const { startROW, startCOL } = getState();\n\n    const updateStart = {\n      type: \"to_init\",\n      payload: { row: startROW, col: startCOL },\n    };\n    dispatch({ type: UPDATE_NODES, payload: updateStart });\n    dispatch({ type: UPDATE_START_NODES, payload: payload });\n  } else if (endMove) {\n    const { endROW, endCOL } = getState();\n    const updateEnd = {\n      type: \"to_init\",\n      payload: { row: endROW, col: endCOL },\n    };\n    dispatch({ type: UPDATE_NODES, payload: updateEnd });\n    dispatch({ type: UPDATE_END_NODES, payload: payload });\n  } else {\n    const { mouseDown, currClickPos } = getState();\n    if (!mouseDown) return;\n    if (currClickPos.row === row && currClickPos.col === col) return;\n    const updateNode = {\n      type: \"on_move\",\n      payload: { row, col },\n    };\n    dispatch({ type: UPDATE_NODES, payload: updateNode });\n    dispatch({ type: SET_CLICK_POS, payload });\n  }\n};\n\nexport const onMouseDown = (payload: IPOS) => async (\n  dispatch: any,\n  getState: any\n) => {\n  const { col, row } = payload;\n  const { startROW, startCOL, endROW, endCOL } = getState();\n  // console.log(startROW);\n  if (row === startROW && col === startCOL) {\n    //start move\n    dispatch({ type: SET_START_MOVE, payload: true });\n  } else if (row === endROW && col === endCOL) {\n    //end move\n    dispatch({ type: SET_END_MOVE, payload: true });\n  } else {\n    // const clickPOS:IPOS = {row,col}\n    dispatch({ type: SET_CLICK_POS, payload });\n    dispatch({ type: SET_MOUSE_DOWN, payload: true });\n  }\n};\nexport const onMouseUp = () => async (dispatch: any, getState: any) => {\n  const { startMove, endMove } = getState();\n  if (startMove) {\n    dispatch({ type: SET_START_MOVE, payload: false });\n  }\n  if (endMove) {\n    dispatch({ type: SET_END_MOVE, payload: false });\n  }\n  dispatch({ type: SET_MOUSE_DOWN, payload: false });\n};\n\nconst sleep = async (ms: number): Promise<any> =>\n  new Promise((r) => setTimeout(r, ms));\n\nexport const performPathFind = (payload: object) => async (\n  dispatch: any,\n  getState: any\n) => {\n  dispatch({ type: ISFINDING, payload: {} });\n  dispatch({ type: START_PATH_FINDING, payload });\n  const { actions } = getState();\n  // console.log(actions);\n  if (actions != null) {\n    let { isReady, speed } = getState();\n    speed = parseInt(speed);\n    while (isReady) {\n      let newAction = actions.next();\n      // console.log(newAction);\n      const payload = newAction.value;\n      // console.log(payload);\n      if (payload === undefined) {\n        const cleanAction = {\n          type: \"clean\",\n        };\n        dispatch({\n          type: NEXTACTION,\n          payload: cleanAction,\n        });\n        break;\n      }\n      if (payload.type === \"visited\") {\n        const toVisited = {\n          type: \"toVisited\",\n          row: payload.row,\n          col: payload.col,\n        };\n        dispatch({\n          type: NEXTACTION,\n          payload: toVisited,\n        });\n        await sleep(speed);\n      }\n    }\n    dispatch({ type: ISFINDING, payload: {} });\n  }\n};\n\nexport const performShortestPathAnimation = (payload: object) => async (\n  dispatch: any,\n  getState: any\n) => {\n  dispatch({ type: ISFINDING, payload: {} });\n  const { nodes, endROW, endCOL, speed } = getState();\n  var tempNode = nodes[endROW][endCOL];\n  // var startNode = nodes[startROW][startCOL];\n  //reverse the path\n  while (tempNode.previousNode != null) {\n    const temp = tempNode.previousNode;\n    temp.nextNode = tempNode;\n    tempNode = temp;\n  }\n  tempNode = tempNode.nextNode;\n  while (tempNode != null) {\n    // console.log(tempNode);\n    const toShortestPath = {\n      type: \"shortestPath\",\n      row: tempNode.row,\n      col: tempNode.col,\n    };\n    dispatch({\n      type: NEXTACTION,\n      payload: toShortestPath,\n    });\n    await sleep(speed);\n    tempNode = tempNode.nextNode;\n  }\n  dispatch({ type: ISFINDING, payload: {} });\n};\n\nexport const startPathFind = (payload: object) => async (\n  dispatch: any,\n  getState: any\n) => {\n  let actions = [];\n  actions.push(performPathFind(payload));\n  actions.push(performShortestPathAnimation(payload));\n  dispatch(actions);\n};\n","import React from \"react\";\nimport \"./node.css\";\nimport { connect } from \"react-redux\";\n// import Overlay from \"./overlay\";\nimport { onMouseMove, onMouseDown, onMouseUp } from \"../actions\";\nimport { IPOS } from \"../constant/ITypes\";\nimport styled, { keyframes } from \"styled-components\";\n\ninterface IComponentProps {\n  key: number;\n  col: number;\n  isEnd: boolean;\n  isStart: boolean;\n  isWall: boolean;\n  isPath: boolean;\n  isVisited: boolean;\n  mouseDown: boolean;\n  onMouseDown: (pos: IPOS) => void;\n  onMouseMove: (pos: IPOS) => void;\n  onMouseUp: () => void;\n  row: number;\n}\n\ninterface IComponentState {\n  mouseDown: boolean;\n}\ninterface INodeprops {\n  isStart: boolean;\n  isEnd: boolean;\n  isWall: boolean;\n}\nconst mapColor = (\n  isStart: boolean,\n  isEnd: boolean,\n  isWall: boolean\n): string => {\n  if (isStart) {\n    return \"var(--start)\";\n  }\n  if (isEnd) {\n    return \"var(--end)\";\n  }\n  if (isWall) {\n    return \"var(--wall)\";\n  }\n  return \"var(--background)\";\n};\n\nconst keyFrameVisited = keyframes`\n  0% {\n    transform: scale(0.6);\n  }\n\n  50% {\n    transform: scale(1.2);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n`;\n\nconst Square = styled.div<INodeprops>`\n  width: 25px;\n  height: 25px;\n  background-color: ${(props) =>\n    mapColor(props.isStart, props.isEnd, props.isWall)};\n  transition: ${keyFrameVisited} 2s ease-in-out;\n  display: inline-block;\n  margin: 0px;\n  border: 1px solid #bbb;\n  padding: 0px;\n  border-radius: 1px;\n  /* box-shadow: 0px 2px 0px #bbb; */\n  cursor: pointer;\n`;\n\nconst GraphNode: React.FC<IComponentProps> = ({\n  key,\n  col,\n  isEnd,\n  isStart,\n  isWall,\n  isVisited,\n  isPath,\n  mouseDown,\n  onMouseDown,\n  onMouseMove,\n  onMouseUp,\n  row,\n}) => {\n  const extraClassName = isWall\n    ? \"node-new-wall\"\n    : isStart\n    ? \"\"\n    : isEnd\n    ? \"\"\n    : isWall\n    ? \"\"\n    : isPath\n    ? \"node-shortest-path\"\n    : isVisited\n    ? \"node-visited\"\n    : \"\";\n  const pos: IPOS = { col, row };\n  return (\n    <Square\n      className={`node ${extraClassName}`}\n      isStart={isStart}\n      isEnd={isEnd}\n      isWall={isWall}\n      onMouseDown={() => onMouseDown(pos)}\n      onMouseMove={() => onMouseMove(pos)}\n      onMouseUp={() => onMouseUp()}\n    ></Square>\n  );\n};\n\nconst MapStateToProps = (state: IComponentState) => ({\n  mouseDown: state.mouseDown,\n  // isEnd: start.graph.isEnd,\n  // isStart: start.graph.isStart,\n  // isWall: start.graph.isWall,\n});\n\nconst MapDispatchToProps = (dispatch: any) => ({\n  onMouseMove: (pos: IPOS) => dispatch(onMouseMove(pos)),\n  onMouseDown: (pos: IPOS) => dispatch(onMouseDown(pos)),\n  onMouseUp: () => dispatch(onMouseUp()),\n});\n\nexport default connect(MapStateToProps, MapDispatchToProps)(GraphNode);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport GraphNode from \"./GraphNode\";\nimport \"./graph.css\";\nimport { IPOS, IAction } from \"../constant/ITypes\";\nimport { updateNodes } from \"../actions/index\";\nimport { INode } from \"../constant/ITypes\";\nimport styled from \"styled-components\";\ninterface IComponentState {\n  startMove: boolean;\n  endMove: boolean;\n  nodes: Array<Array<INode>>;\n  startROW: number;\n  startCOL: number;\n  endROW: number;\n  endCOL: number;\n  mouseDown: boolean;\n  currClickPos: IPOS;\n  nextAction: IAction | null;\n}\n\ninterface IComponentProps {\n  nodes: Array<Array<INode>>;\n  updateNodes: (payload: object) => void;\n  startROW: number;\n  startCOL: number;\n  endROW: number;\n  endCOL: number;\n  mouseDown: boolean;\n  currClickPos: IPOS;\n  nextAction: IAction | null;\n}\nconst Wrapper = styled.div`\n  margin-top: 0px;\n`;\n\nconst Graph: React.FC<IComponentProps> = ({\n  nodes,\n  updateNodes,\n  startROW,\n  startCOL,\n  endROW,\n  endCOL,\n  mouseDown,\n  currClickPos,\n  nextAction,\n}) => {\n  useEffect(() => {\n    if (nextAction !== null && nextAction !== undefined) {\n      if (nextAction.type === \"toVisited\") {\n        const updateNode = {\n          type: \"visited\",\n          payload: { row: nextAction.row, col: nextAction.col },\n        };\n        updateNodes(updateNode);\n      }\n      if (nextAction.type === \"shortestPath\") {\n        const updateNode = {\n          type: \"toShortestPath\",\n          payload: { row: nextAction.row, col: nextAction.col },\n        };\n        updateNodes(updateNode);\n      }\n    }\n  }, [\n    startROW,\n    startCOL,\n    endROW,\n    endCOL,\n    mouseDown,\n    currClickPos,\n    nextAction,\n    updateNodes,\n  ]);\n  return (\n    <Wrapper>\n      <div key={0} className=\"grid\">\n        {nodes.map((row, rowIdx) => {\n          // console.log(\"render row\");\n          return (\n            <div key={rowIdx} className=\"graphRow\">\n              {row.map((node) => {\n                const {\n                  id,\n                  row,\n                  col,\n                  isFinish,\n                  isVisited,\n                  isPath,\n                  isStart,\n                  isWall,\n                } = node;\n                return (\n                  <GraphNode\n                    key={id}\n                    col={col}\n                    isEnd={isFinish}\n                    isStart={isStart}\n                    isWall={isWall}\n                    isPath={isPath}\n                    isVisited={isVisited}\n                    row={row}\n                  ></GraphNode>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    </Wrapper>\n  );\n};\n\nconst MapStateToProps = (state: IComponentState) => ({\n  nodes: state.nodes,\n  mouseDown: state.mouseDown,\n  // startMove: state.mouse.startMove,\n  // endMove: state.mouse.endMove,\n  startROW: state.startROW,\n  startCOL: state.startCOL,\n  endROW: state.endROW,\n  endCOL: state.endCOL,\n  currClickPos: state.currClickPos,\n  nextAction: state.nextAction,\n});\n\nconst MapDispatchToProps = (dispatch: any) => ({\n  updateNodes: (payload: object) => dispatch(updateNodes(payload)),\n  // setStartMove: (isStart: boolean) => dispatch(setStartMove({ isStart })),\n  // setMouseDown: (isDown: boolean) => dispatch(setMouseDown({ isDown })),\n  // setEndMove: (isEndMove: boolean) => dispatch(setEndMove({ isEndMove })),\n});\n\nexport default connect(MapStateToProps, MapDispatchToProps)(Graph);\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst Label = () => {\n  return (\n    <div className=\"top-label\">\n      <Paper elevation={0}>\n        <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\n          <Grid item>\n            <div className=\"node node-finish\"></div>\n          </Grid>\n          <Grid item>\n            <div>Target node</div>\n          </Grid>\n          <Grid item>\n            <div className=\"node node-start\"></div>\n          </Grid>\n          <Grid item>\n            <div>Start node</div>\n          </Grid>\n          <Grid item>\n            <div className=\"node node-unvivited\"></div>\n          </Grid>\n          <Grid item>\n            <div>Unvisited node</div>\n          </Grid>\n          <Grid item>\n            <div className=\"node node-wall\"></div>\n          </Grid>\n          <Grid item>\n            <div>Obstacle node</div>\n          </Grid>\n          <Grid item>\n            <div className=\"node visited-2\"></div>\n          </Grid>\n          <Grid item>\n            <div>Path</div>\n          </Grid>\n          <Grid item>\n            <div className=\"node visited-1\"></div>\n            <div className=\"node visited-2\"></div>\n            <div className=\"node visited-3\"></div>\n          </Grid>\n          <Grid item>\n            <div>Visited node</div>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n};\n\nexport default Label;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  setPathAlgo,\n  clearWall,\n  resetAll,\n  startPathFind,\n  setSpeed,\n} from \"../actions/index\";\n\ninterface IComponentProps {\n  useAlgo: number;\n  isReady: boolean;\n  isFinding: boolean;\n  speed: string;\n  setPathAlgo: (Algo: number) => void;\n  clearWall: () => void;\n  resetAll: () => void;\n  setSpeed: (speed: string) => void;\n  startPathFind: (isReady: boolean) => void;\n}\n\ninterface IComponentState {\n  useAlgo: number;\n  isFinding: boolean;\n  isReady: boolean;\n  speed: string;\n}\n\nconst useStyles = makeStyles({\n  formControl: {\n    minWidth: \"200px\",\n    margin: \"10px\",\n  },\n  radioGroup: {\n    alignItems: \"center\",\n    margin: \"5px\",\n    padding: \"5px\",\n    fontFamily: \"'Anton', sans-serif\",\n  },\n  radioformControl: {\n    minWidth: \"200px\",\n    // maxWidth: \"250px\",\n    margin: \"10px\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n\nconst Controller: React.FC<IComponentProps> = ({\n  useAlgo,\n  isFinding,\n  isReady,\n  speed,\n  setPathAlgo,\n  clearWall,\n  resetAll,\n  startPathFind,\n  setSpeed,\n}) => {\n  const classes = useStyles();\n\n  const handelStartBtnClick = () => {\n    if (!isReady) startPathFind(!isReady);\n    else {\n      //resetall\n      resetAll();\n    }\n  };\n\n  const handelAlgoChange = (e: any, value: any) => {\n    setPathAlgo(value.props.value);\n  };\n\n  const handleSpeedChange = (e: any, value: any) => {\n    setSpeed(value);\n  };\n\n  const handleClearWall = () => {\n    clearWall();\n  };\n  return (\n    <>\n      <Paper elevation={0}>\n        <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\n          <Grid item>\n            <RadioGroup\n              className={classes.radioformControl}\n              aria-label=\"speed\"\n              name=\"speed\"\n              value={speed}\n              onChange={handleSpeedChange}\n              row\n            >\n              <Typography className={classes.radioGroup}>\n                Animation Speed\n              </Typography>\n\n              <>\n                <FormControlLabel\n                  value=\"100\"\n                  control={<Radio color=\"primary\" />}\n                  label=\"slow\"\n                  disabled={isFinding}\n                />\n                <FormControlLabel\n                  value=\"10\"\n                  control={<Radio color=\"primary\" />}\n                  label=\"mid\"\n                  disabled={isFinding}\n                />\n                <FormControlLabel\n                  value=\"1\"\n                  control={<Radio color=\"primary\" />}\n                  label=\"fast\"\n                  disabled={isFinding}\n                />\n              </>\n            </RadioGroup>\n          </Grid>\n          <Grid item>\n            <FormControl\n              id=\"algorithm_select\"\n              className={classes.formControl}\n              disabled={isFinding}\n            >\n              <InputLabel id=\"demo-simple-select-label\">\n                Path Finding Algorithm\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={useAlgo}\n                onChange={handelAlgoChange}\n              >\n                <MenuItem value={1}>Dijkstra</MenuItem>\n                <MenuItem value={2}>A Star</MenuItem>\n                <MenuItem value={3}>BFS</MenuItem>\n                <MenuItem value={4}>DFS</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handelStartBtnClick}\n              disabled={isFinding}\n            >\n              {isReady\n                ? \"Reset\"\n                : `Start  \n              ${\n                useAlgo === 1\n                  ? \" - Dijkstra\"\n                  : useAlgo === 2\n                  ? \" - A Star\"\n                  : useAlgo === 3\n                  ? \" - BFS\"\n                  : useAlgo === 4\n                  ? \" - DFS\"\n                  : \"\"\n              }`}\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleClearWall}\n              disabled={isFinding}\n            >\n              Clear Obstacle\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n};\n\nconst MapStateToProps = (state: IComponentState) => ({\n  useAlgo: state.useAlgo,\n  isFinding: state.isFinding,\n  isReady: state.isReady,\n  speed: state.speed,\n});\n\nconst MapDispatchToProps = (dispatch: any) => ({\n  setPathAlgo: (Algo: number) => dispatch(setPathAlgo({ Algo })),\n  clearWall: () => dispatch(clearWall({})),\n  resetAll: () => dispatch(resetAll({})),\n  startPathFind: (isReady: boolean) => dispatch(startPathFind({ isReady })),\n  setSpeed: (speed: string) => dispatch(setSpeed(speed)),\n});\n\nexport default connect(MapStateToProps, MapDispatchToProps)(Controller);\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  margin: 10px;\n`;\n\nconst GitHubLink = () => {\n  return (\n    <Wrapper>\n      {\" \"}\n      <a href=\"https://github.com/Conradyen/Path-finding-Visualizer\">\n        <FontAwesomeIcon icon={faGithub} size=\"3x\" color=\"#7a7979\" />\n      </a>\n    </Wrapper>\n  );\n};\n\nexport default GitHubLink;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport GitHubLink from \"./githubLink\";\n\nconst Name = styled.p`\n  marginbottom: 0px;\n  padding: 10px 0px 0px 0px;\n`;\n\nconst Wrapper = styled.footer`\n  width: 100%;\n  position: fixed;\n  background-color: #f4f4f4;\n  bottom: 0;\n`;\n\nconst Footer = () => {\n  return (\n    <Wrapper>\n      <GitHubLink />\n      <Name>&copy;Ming - Hsuan Yen, 2020</Name>\n    </Wrapper>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport \"./App.css\";\nimport Graph from \"./components/Graph\";\nimport Label from \"./components/label\";\nimport Controller from \"./components/Controller\";\nimport Footer from \"./components/footer\";\nimport styled from \"styled-components\";\n\nconst Title = styled.div`\n  margin-top: 10px;\n  font-family: \"Anton\", sans-serif;\n  font-size: 50px;\n`;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Title>Path Finding Visualizer</Title>\n      <Label />\n      <Graph />\n      <Controller />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { INode } from \"../constant/ITypes\";\n\nexport const initGrid = (\n  startRow: number,\n  startCol: number,\n  endRow: number,\n  endCol: number\n): Array<Array<INode>> => {\n  const grid = [];\n  let id = 0;\n  for (let row = 0; row < 20; row++) {\n    const currentRow = [];\n    for (let col = 0; col < 50; col++) {\n      currentRow.push(\n        getNewNode(id, col, row, startRow, startCol, endRow, endCol)\n      );\n      id++;\n    }\n    grid.push(currentRow);\n  }\n  return grid;\n};\n\nexport const ResetAllWithWall = (\n  grid: Array<Array<INode>>\n): Array<Array<INode>> => {\n  for (let i = 0; i < 20; i++) {\n    for (let j = 0; j < 50; j++) {\n      const tempNode = grid[i][j];\n      tempNode.isPath = false;\n      tempNode.distance = Infinity;\n      tempNode.cost = Infinity;\n      tempNode.isVisited = false;\n      tempNode.previousNode = null;\n      tempNode.nextNode = null;\n      grid[i][j] = tempNode;\n    }\n  }\n\n  return grid;\n};\n\nconst getNewNode = (\n  id: number,\n  col: number,\n  row: number,\n  startRow: number,\n  startCol: number,\n  endRow: number,\n  endCol: number\n): INode => {\n  return {\n    id,\n    col,\n    row,\n    isStart: row === startRow && col === startCol,\n    isFinish: row === endRow && col === endCol,\n    isPath: false,\n    distance: Infinity,\n    cost: Infinity,\n    isVisited: false,\n    isWall: false,\n    previousNode: null,\n    nextNode: null,\n  };\n};\n","import { INode, IPOS } from \"../constant/ITypes\";\n// import { getPathfindGenerator } from \"./index\";\n\nexport function sortNodes(unvisitedNodes: Array<INode>) {\n  unvisitedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\n}\n\nexport function sortNodesAstar(unvisitedNodes: Array<INode>, endNode: INode) {\n  unvisitedNodes.sort(\n    (nodeA, nodeB) =>\n      nodeA.distance +\n      euclideanDistance(nodeA, endNode) -\n      (nodeB.distance + euclideanDistance(nodeB, endNode))\n  );\n}\n\nexport function NodeCompareElement(Node: INode): number {\n  return Node.distance;\n}\n\n// export function updateUnvisitedNeighbors(\n//   node: INode,\n//   grid: Array<Array<INode>>,\n//   distance: number\n// ) {\n//   const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\n//   for (const neighbor of unvisitedNeighbors) {\n//     neighbor.distance = node.distance + 1;\n//     neighbor.previousNode = node;\n//   }\n// }\n\nexport function getUnvisitedNeighbors(\n  node: INode,\n  grid: Array<Array<INode>>\n): Array<INode> {\n  const neighbors = [];\n  const { col, row } = node;\n  if (row > 0) neighbors.push(grid[row - 1][col]);\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\n  if (col > 0) neighbors.push(grid[row][col - 1]);\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\n  return neighbors.filter((neighbor) => !neighbor.isVisited);\n}\n\nexport function getNeighbors(\n  node: INode,\n  grid: Array<Array<INode>>\n): Array<IPOS> {\n  const neighbors = [];\n  const { col, row } = node;\n  if (row > 0 && !grid[row - 1][col].isVisited)\n    neighbors.push({ row: row - 1, col: col });\n  if (row < grid.length - 1 && !grid[row + 1][col].isVisited)\n    neighbors.push({ row: row + 1, col: col });\n  if (col > 0 && !grid[row][col - 1].isVisited)\n    neighbors.push({ row: row, col: col - 1 });\n  if (col < grid[0].length - 1 && !grid[row][col + 1].isVisited)\n    neighbors.push({ row: row, col: col + 1 });\n  return neighbors;\n}\n\nexport function getNeighborsFromPos(\n  node: IPOS,\n  grid: Array<Array<INode>>\n): Array<IPOS> {\n  const neighbors = [];\n  const { col, row } = node;\n  if (row > 0) neighbors.push({ row: row - 1, col: col });\n  if (row < grid.length - 1) neighbors.push({ row: row + 1, col: col });\n  if (col > 0) neighbors.push({ row: row, col: col - 1 });\n  if (col < grid[0].length - 1) neighbors.push({ row: row, col: col + 1 });\n  return neighbors;\n}\n\nexport function getAllNodes(grid: Array<Array<INode>>): Array<INode> {\n  const nodes: Array<INode> = [];\n  for (const row of grid) {\n    for (const node of row) {\n      nodes.push(node);\n    }\n  }\n  return nodes;\n}\n\n//calculate distance between start and end.\nexport function euclideanDistance(startNode: INode, endNode: INode): number {\n  const col_d = Math.abs(endNode.col - startNode.col);\n  const row_d = Math.abs(endNode.row - startNode.row);\n  return col_d + row_d;\n}\n\n// Backtracks from the finishNode to find the shortest path.\n// Only works when called *after* the dijkstra method above.\nexport function getNodesInShortestPathOrder(finishNode: INode): Array<INode> {\n  const nodesInShortestPathOrder = [];\n  let currentNode: INode | null = finishNode;\n  while (currentNode !== null) {\n    nodesInShortestPathOrder.unshift(currentNode);\n    currentNode = currentNode.previousNode;\n  }\n  return nodesInShortestPathOrder;\n}\n","export function stack() {\n  this.items = [];\n}\n\nstack.prototype = {\n  isEmpty: function () {\n    return this.items.length === 0;\n  },\n  push: function (element) {\n    this.items.push(element);\n  },\n\n  pop: function () {\n    if (this.isEmpty()) return \"Underflow\";\n    return this.items.pop();\n  },\n  peek: function () {\n    return this.items[this.items.length - 1];\n  },\n};\n","import { getNeighbors } from \"./utils\";\nimport { INode, IAction } from \"../constant/ITypes\";\nimport { stack } from \"../Datastructer/stack\";\n\nexport function* dfs(\n  grid: Array<Array<INode>>,\n  startNode: INode,\n  finishNode: INode\n): IterableIterator<IAction> {\n  let s = new stack();\n  s.push(startNode);\n  while (!s.isEmpty()) {\n    const tempNode = s.pop();\n    if (tempNode.isWall) continue;\n    // console.log(s.items);\n    const validNeighbor = getNeighbors(tempNode, grid);\n    if (validNeighbor.length === 0) {\n      s.pop();\n      // continue;\n    } else {\n      for (const neighborPOS of validNeighbor) {\n        const node = grid[neighborPOS.row][neighborPOS.col];\n        node.previousNode = tempNode;\n        s.push(node);\n      }\n    }\n    tempNode.isVisited = true;\n    yield { type: \"visited\", row: tempNode.row, col: tempNode.col };\n    grid[tempNode.row][tempNode.col] = tempNode;\n    if (tempNode === finishNode) break;\n  }\n}\n","import { INode, IAction, IPOS } from \"../constant/ITypes\";\n\n// Performs Dijkstra's algorithm; returns *all* nodes in the order\n// in which they were visited. Also makes nodes point back to their\n// previous node, effectively allowing us to compute the shortest path\n// by backtracking from the finish node.\nconst getMinDistance = (grid: Array<Array<INode>>): IPOS => {\n  // Initialize min value\n  let min = Infinity,\n    min_pos = {\n      row: -1,\n      col: -1,\n    };\n  for (const row of grid) {\n    for (const node of row) {\n      if (\n        grid[node.row][node.col].isVisited === false &&\n        node.distance <= min\n      ) {\n        min = node.distance;\n        min_pos = {\n          row: node.row,\n          col: node.col,\n        };\n      }\n    }\n  }\n  return min_pos;\n};\n\nfunction updateGrid(\n  grid: Array<Array<INode>>,\n  prevNode: INode,\n  row: number,\n  col: number,\n  distance: number\n) {\n  if (grid[row][col].isVisited === false) {\n    grid[row][col].distance = distance + 1;\n    grid[row][col].previousNode = prevNode;\n  }\n}\n\nexport function* dijkstra(\n  grid: Array<Array<INode>>,\n  startNode: INode,\n  finishNode: INode\n): IterableIterator<IAction> {\n  grid[startNode.row][startNode.col].distance = 0;\n  for (let i = 0; i < 1000; i++) {\n    let clostestNode = getMinDistance(grid);\n    grid[clostestNode.row][clostestNode.col].isVisited = true;\n    yield { type: \"visited\", row: clostestNode.row, col: clostestNode.col };\n    let tempNode = grid[clostestNode.row][clostestNode.col];\n    if (tempNode.isWall) continue;\n    if (clostestNode.row > 0) {\n      updateGrid(\n        grid,\n        tempNode,\n        clostestNode.row - 1,\n        clostestNode.col,\n        tempNode.distance\n      );\n    }\n    if (clostestNode.row < grid.length - 1) {\n      updateGrid(\n        grid,\n        tempNode,\n        clostestNode.row + 1,\n        clostestNode.col,\n        tempNode.distance\n      );\n    }\n    if (clostestNode.col > 0) {\n      updateGrid(\n        grid,\n        tempNode,\n        clostestNode.row,\n        clostestNode.col - 1,\n        tempNode.distance\n      );\n    }\n    if (clostestNode.col < grid[0].length - 1) {\n      updateGrid(\n        grid,\n        tempNode,\n        clostestNode.row,\n        clostestNode.col + 1,\n        tempNode.distance\n      );\n    }\n    if (tempNode === finishNode) break;\n  }\n}\n","export function minHeap(scoreFunction) {\n  this.content = [];\n  this.scoreFunction = scoreFunction;\n}\n\nminHeap.prototype = {\n  isEmpty: function () {\n    return this.content.length === 0;\n  },\n  push: function (element) {\n    this.content.push(element);\n    this.percolateUp(this.content.length - 1);\n  },\n\n  pop: function () {\n    var result = this.content[0];\n    var end = this.content.pop();\n    if (this.content.length > 0) {\n      this.content[0] = end;\n      this.percolateDown(0);\n    }\n    return result;\n  },\n\n  size: function () {\n    return this.content.length;\n  },\n\n  percolateUp: function (n) {\n    var element = this.content[n],\n      score = this.scoreFunction(element);\n    while (n > 0) {\n      var parentN = Math.floor((n + 1) / 2) - 1,\n        parent = this.content[parentN];\n      if (score > this.scoreFunction(parent)) break;\n      this.content[parentN] = element;\n      this.content[n] = parent;\n      n = parentN;\n    }\n  },\n\n  percolateDown: function (n) {\n    var length = this.content.length,\n      element = this.content[n],\n      elemScore = this.scoreFunction(element);\n\n    while (true) {\n      var child2N = (n + 1) * 2,\n        child1N = child2N - 1;\n      var swap = null;\n\n      if (child1N < length) {\n        var child1 = this.content[child1N],\n          child1Score = this.scoreFunction(child1);\n        if (child1Score < elemScore) swap = child1N;\n      }\n      if (child2N < length) {\n        var child2 = this.content[child2N],\n          child2Score = this.scoreFunction(child2);\n        if (child2Score < (swap == null ? elemScore : child1Score))\n          swap = child2N;\n      }\n\n      if (swap == null) break;\n      this.content[n] = this.content[swap];\n      this.content[swap] = element;\n      n = swap;\n    }\n  },\n};\n","import { getNeighbors } from \"./utils\";\nimport { minHeap } from \"../Datastructer/heap\";\nimport { IAction, INode } from \"../constant/ITypes\";\n\nexport function* aStar(\n  grid: Array<Array<INode>>,\n  startNode: INode,\n  finishNode: INode\n): IterableIterator<IAction> {\n  // const visitedNodesInOrder = [];\n  grid[startNode.row][startNode.col].distance = 0;\n  grid[startNode.row][startNode.col].cost = 0;\n  grid[startNode.row][startNode.col].isVisited = true;\n  yield { type: \"visited\", row: startNode.row, col: startNode.col };\n  // visitedNodesInOrder.push(startNode);\n  //const unvisitedNodes = getAllNodes(grid);\n  var minheap = new minHeap((node: INode) => {\n    return node.cost;\n  });\n  minheap.push(startNode);\n\n  while (!minheap.isEmpty()) {\n    // sortNodesAstar(unvisitedNodes, finishNode);\n    const closestNode = minheap.pop();\n    // If we encounter a wall, we skip it.\n    if (closestNode.isWall) continue;\n    // If the closest node is at a distance of infinity,\n    // we must be trapped and should therefore stop.\n    const validNeighbors = getNeighbors(closestNode, grid);\n    for (const neighborPOS of validNeighbors) {\n      const neighbor = grid[neighborPOS.row][neighborPOS.col];\n      if (neighbor.isVisited) continue;\n      if (closestNode.distance + 1 < neighbor.distance) {\n        neighbor.distance = closestNode.distance + 1;\n        neighbor.previousNode = closestNode;\n        yield { type: \"visited\", row: closestNode.row, col: closestNode.col };\n      }\n      var newCost =\n        closestNode.distance +\n        Math.abs(finishNode.col - neighbor.col) +\n        Math.abs(finishNode.row - neighbor.row);\n\n      if (newCost < neighbor.cost) {\n        neighbor.cost = newCost;\n        minheap.push(neighbor);\n      }\n      grid[neighborPOS.row][neighborPOS.col] = neighbor;\n    }\n    if (closestNode.distance === Infinity) break;\n\n    closestNode.isVisited = true;\n    yield { type: \"visited\", row: closestNode.row, col: closestNode.col };\n\n    if (closestNode === finishNode) break;\n  }\n}\n","export function queue() {\n  this.items = [];\n}\n\nqueue.prototype = {\n  isEmpty: function () {\n    return this.items.length === 0;\n  },\n  enqueue: function (element) {\n    this.items.push(element);\n  },\n  dequeue: function () {\n    if (this.isEmpty()) return \"Underflow\";\n    return this.items.shift();\n  },\n  clear: function () {\n    this.items = [];\n  },\n};\n","import { getNeighbors } from \"./utils\";\nimport { queue } from \"../Datastructer/queue\";\nimport { IAction, INode } from \"../constant/ITypes\";\n\nexport function* greedyBFS(\n  grid: Array<Array<INode>>,\n  startNode: INode,\n  finishNode: INode\n): IterableIterator<IAction> {\n  grid[startNode.row][startNode.col].distance = 0;\n  // startNode.distance = 0;\n  // startNode.cost = 0;\n  yield { type: \"visited\", row: startNode.row, col: startNode.col };\n  //const unvisitedNodes = getAllNodes(grid);\n  var q = new queue();\n  q.enqueue(startNode);\n  while (!q.isEmpty()) {\n    // sortNodesAstar(unvisitedNodes, finishNode);\n    const closestNode = q.dequeue();\n    closestNode.isVisited = true;\n    if (closestNode.isWall) continue;\n    const validNeighbors = getNeighbors(closestNode, grid);\n    for (const neighborPOS of validNeighbors) {\n      const neighbor = grid[neighborPOS.row][neighborPOS.col];\n      if (neighbor.isVisited) continue;\n      // if (neighbor.visited) continue;\n      if (neighbor.isWall) continue;\n      neighbor.isVisited = true;\n      neighbor.previousNode = closestNode;\n      yield { type: \"visited\", row: neighbor.row, col: neighbor.col };\n      q.enqueue(neighbor);\n      grid[neighborPOS.row][neighborPOS.col] = neighbor;\n    }\n\n    if (closestNode === finishNode) break;\n    yield { type: \"visited\", row: closestNode.row, col: closestNode.col };\n  }\n}\n","import {\n  START_PATH_FINDING,\n  UPDATE_NODES,\n  UPDATE_WALL_NODES,\n  UPDATE_START_NODES,\n  UPDATE_END_NODES,\n  CLEAR_WALL,\n  RESET_ALL,\n  SET_CLICK_POS,\n  SET_MOUSE_DOWN,\n  SET_START_MOVE,\n  SET_END_MOVE,\n  ISDARK,\n  SET_PATH_ALGO,\n  NEXTACTION,\n  ISFINDING,\n  SET_SPEED,\n} from \"../constant/actionTypes\";\nimport { INode } from \"../constant/ITypes\";\nimport { initGrid, ResetAllWithWall } from \"../utils/utils\";\nimport { IPOS, IAction } from \"../constant/ITypes\";\nimport { getPathfindGenerator } from \"../algorithms\";\n\ninterface IState {\n  nodes: Array<Array<INode>>;\n  isFinding: boolean;\n  isReady: boolean;\n  useAlgo: number;\n  mouseDown: boolean;\n  startMove: boolean;\n  endMove: boolean;\n  startROW: number;\n  startCOL: number;\n  endROW: number;\n  endCOL: number;\n  currClickPos: IPOS | null;\n  isDark: boolean;\n  actions: IterableIterator<IAction> | null;\n  nextAction: IAction | null;\n  speed: string;\n}\n\nconst initState = {\n  nodes: initGrid(10, 15, 10, 35),\n  isFinding: false,\n  isReady: false,\n  useAlgo: 1,\n  mouseDown: false,\n  startMove: false,\n  endMove: false,\n  startROW: 10,\n  startCOL: 15,\n  endROW: 10,\n  endCOL: 35,\n  currClickPos: null,\n  isDark: false,\n  actions: null,\n  nextAction: null,\n  speed: \"10\",\n};\n\nexport default function graphReducer(\n  state: IState = initState,\n  action: any\n): IState {\n  switch (action.type) {\n    case ISDARK:\n      const { isDark } = action.payload;\n      return { ...state, isDark };\n    case ISFINDING:\n      const { isFinding } = state;\n      return { ...state, isFinding: !isFinding };\n    case SET_MOUSE_DOWN:\n      return { ...state, mouseDown: action.payload };\n    case SET_START_MOVE:\n      return { ...state, startMove: action.payload };\n    case SET_END_MOVE:\n      return { ...state, endMove: action.payload };\n    case SET_CLICK_POS:\n      return { ...state, currClickPos: action.payload };\n    case SET_SPEED:\n      return { ...state, speed: action.payload };\n    case START_PATH_FINDING:\n      const isReady = action.payload.isReady;\n      let pathFindTarget = state.nodes;\n      let actions = null;\n      let nextAction: IAction | null = null;\n      if (isReady) {\n        const { useAlgo, startROW, startCOL, endROW, endCOL } = state;\n        actions = getPathfindGenerator(\n          useAlgo,\n          pathFindTarget,\n          pathFindTarget[startROW][startCOL],\n          pathFindTarget[endROW][endCOL]\n        );\n      }\n      return {\n        ...state,\n        isReady,\n        actions,\n        nextAction,\n      };\n    case SET_PATH_ALGO:\n      const { Algo } = action.payload;\n      return { ...state, useAlgo: Algo };\n    case CLEAR_WALL:\n      const oldNodes = state.nodes;\n      for (let row = 0; row < 20; row++) {\n        for (let col = 0; col < 50; col++) {\n          oldNodes[row][col].isWall = false;\n        }\n      }\n      return { ...state, nodes: oldNodes, currClickPos: null };\n    case RESET_ALL:\n      return {\n        ...state,\n        nodes: ResetAllWithWall(state.nodes),\n        isFinding: false,\n        isReady: false,\n        mouseDown: false,\n        startMove: false,\n        endMove: false,\n        startROW: 10,\n        startCOL: 15,\n        endROW: 10,\n        endCOL: 35,\n        currClickPos: null,\n        actions: null,\n        nextAction: null,\n      };\n    case UPDATE_WALL_NODES:\n      return { ...state };\n    case UPDATE_NODES:\n      const allNodes = state.nodes;\n      const updateRow = action.payload.payload.row;\n      const updateCol = action.payload.payload.col;\n      // console.log(updateRow);\n      let newNode = allNodes[updateRow][updateCol];\n      if (action.payload.type === \"to_init\") {\n        // console.log(\"to init\");\n        newNode.isStart = false;\n        newNode.isFinish = false;\n        newNode.isWall = false;\n      } else if (action.payload.type === \"on_move\") {\n        // console.log(\"on_move\");\n        newNode.isWall = true;\n      } else if (action.payload.type === \"visited\") {\n        // console.log(\"on_visited\");\n        newNode.isVisited = true;\n      } else if (action.payload.type === \"toShortestPath\") {\n        // console.log(\"on_shortest_path\");\n        newNode.isPath = true;\n      }\n      //TODO :\n      // else if (action.payload.type === \"on_click\"){\n      // }\n      allNodes[updateRow][updateCol] = newNode;\n      return { ...state, nodes: allNodes };\n    case UPDATE_START_NODES:\n      //TODO :\n      const updateStartRow = action.payload.row;\n      const updateStartCol = action.payload.col;\n      const graph = state.nodes;\n      const node = graph[updateStartRow][updateStartCol];\n      // console.log(node);\n      node.isStart = true;\n      graph[updateStartRow][updateStartCol] = node;\n      // console.log(graph[updateStartRow][updateStartCol]);\n      return {\n        ...state,\n        nodes: graph,\n        startROW: updateStartRow,\n        startCOL: updateStartCol,\n      };\n    case UPDATE_END_NODES:\n      //TODO :\n      const updateEndRow = action.payload.row;\n      const updateEndCol = action.payload.col;\n      const nodes = state.nodes;\n      const n = nodes[updateEndRow][updateEndCol];\n      n.isFinish = true;\n      nodes[updateEndRow][updateEndCol] = n;\n      return {\n        ...state,\n        nodes: nodes,\n        endCOL: updateEndCol,\n        endROW: updateEndRow,\n      };\n    case NEXTACTION:\n      //update next action\n      const ready = state.isReady;\n      return {\n        ...state,\n        nextAction: ready ? action.payload : null,\n      };\n    // return { ...state };\n    default:\n      return { ...state };\n  }\n}\n","// import { combineReducers } from \"redux\";\nimport graphReducer from \"./graphReducer\";\n// import mouseReducer from \"./mouseReducer\";\n// import controlReducer from \"./controlReducer\";\n\nexport default graphReducer;\n","import { dfs } from \"./dfs\";\nimport { dijkstra } from \"./dijkstra\";\nimport { aStar } from \"./aStar\";\nimport { greedyBFS } from \"./greedyBFS\";\nimport { INode, IAction } from \"../constant/ITypes\";\n\nexport function getPathfindGenerator(\n  useAlgo: number,\n  nodes: Array<Array<INode>>,\n  start: INode,\n  end: INode\n): IterableIterator<IAction> | null {\n  var pathFindGenerator = null;\n  switch (useAlgo) {\n    case 1:\n      pathFindGenerator = dijkstra(nodes, start, end);\n      break;\n    case 2:\n      pathFindGenerator = aStar(nodes, start, end);\n      break;\n    case 3:\n      pathFindGenerator = greedyBFS(nodes, start, end);\n      break;\n    case 4:\n      pathFindGenerator = dfs(nodes, start, end);\n      break;\n    default:\n      pathFindGenerator = dijkstra(nodes, start, end);\n  }\n  return pathFindGenerator;\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducer\";\nimport { sequenceAction } from \"./middleware/sequenceAction\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n// import { customMiddleware } from \"./middleware/middleware\";\n// const initialState = {};\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk, sequenceAction))\n);\n\nexport default store;\n","import { Dispatch } from \"redux\";\n\ninterface IMiddleware {\n  dispatch: Dispatch<any>;\n  getState?: any;\n}\n\n//inspire by redux-sequence-action typescript support added\n//perform actions in sequence\n\nexport const sequenceAction = ({ dispatch, getState }: IMiddleware) => (\n  next: any\n) => (action: any) => {\n  if (!Array.isArray(action)) {\n    return next(action);\n  }\n\n  return action.reduce((result, currAction) => {\n    return result.then(() => {\n      if (!currAction) {\n        return Promise.resolve();\n      }\n\n      return Array.isArray(currAction)\n        ? Promise.all(currAction.map((item) => dispatch(item)))\n        : dispatch(currAction);\n    });\n  }, Promise.resolve());\n};\n","export const lightTheme = [\n  \"--title: #232931\",\n  \"--start: #182952\",\n  \"--end:#5555\",\n  \"--wall:#3fa7d6\",\n  \"--first: #3fa7d6\",\n  \"--second: #ee6352\",\n  \"--third: #fac05e\",\n  \"--background: #f4f4f4\",\n  \"--done:#59cd90\",\n];\n\nexport const darkTheme = [\n  \"--title: #ffffff\",\n  \"--start: #182952\",\n  \"--first: #3700b3\",\n  \"--second: #03dac6\",\n  \"--third: #cf6679\",\n  \"--background: #121212\",\n  \"--done:#bb86fc\",\n];\n","import React, { useLayoutEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setDark } from \"../actions\";\nimport { lightTheme, darkTheme } from \"./Theme\";\n\nconst ThemeContext = React.createContext({\n  isDark: true,\n  toggle: () => {},\n});\n\ninterface IThemeContextProps {\n  isDark: boolean;\n  setIsDark: (isDark: boolean) => void;\n}\n\nconst ThemeProvider: React.FC<IThemeContextProps> = ({\n  isDark,\n  setIsDark,\n  children,\n}) => {\n  // paints the app before it renders elements\n  useLayoutEffect(() => {\n    const applyTheme = (theme: Array<string>) => {\n      const root = document.getElementsByTagName(\"html\")[0];\n      root.style.cssText = theme.join(\";\");\n    };\n\n    const themeToApply = isDark ? darkTheme : lightTheme;\n    setIsDark(isDark);\n    applyTheme(themeToApply);\n    // if state changes, repaints the app\n  }, [isDark, setIsDark]);\n\n  const toggle = () => {\n    setIsDark(!isDark);\n  };\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        isDark,\n        toggle,\n      }}\n    >\n      {children}\n    </ThemeContext.Provider>\n  );\n};\ninterface IState {\n  isDark: boolean;\n}\nconst mapStateToProps = (state: IState) => ({ isDark: state.isDark });\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  setIsDark: (isDark: boolean) => dispatch(setDark({ isDark })),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeProvider);\n\nexport { ThemeContext };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store\";\nimport ThemeProvider from \"./constant/ThemeContext\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider>\n      {\" \"}\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}